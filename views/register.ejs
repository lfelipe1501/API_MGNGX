<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
	<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
	<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
	<link rel="manifest" href="/site.webmanifest">
    <title>Register</title>
    <link rel="stylesheet" href="css/style.css">
    <link rel="stylesheet" href="css/mobile.css">
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css2?family=Andada+Pro:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h2>REGISTER FORM</h2>
        <form id="regForm">
            <div class="input-container">
                <span class="material-icons">person</span>
                <input type="text" name="username" placeholder="Username" required minlength="3" maxlength="14" pattern="[a-zA-Z][a-zA-Z0-9\-_]*" title="Must start with a letter. Only letters, numbers, hyphens and underscores allowed" autofocus>
            </div>
            <div class="input-container">
                <span class="material-icons">lock</span>
                <input type="password" id="regPassword" name="password" placeholder="Password" required minlength="8">
                <span class="material-icons toggle-password" onclick="togglePassword('regPassword')">visibility</span>
            </div>
            <div class="form-group admin-checkbox">
                <label class="checkbox-container">
                    <input type="checkbox" name="isadmin" value="1" tabindex="0">
                    <span class="checkmark"></span>
                    Is ADMIN
                </label>
            </div>
            <button type="submit">REGISTER</button>
        </form>
        <div id="registerError"></div>
    </div>

    <script>
        document.getElementById('regForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const errorDiv = document.getElementById('registerError');
            
            try {
                const formData = new FormData(e.target);
                const data = {
                    username: formData.get('username'),
                    password: formData.get('password'),
                    isadmin: formData.get('isadmin') === '1'
                };

                const response = await fetch('/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    const result = await response.json();
                    
                    if (result.success) {
                        // Mostrar mensaje de éxito
                        errorDiv.style.color = 'green';
                        errorDiv.textContent = 'Registration successful! A new window with your MFA configuration has been opened.';
                        
                        // Limpiar el formulario
                        e.target.reset();
                        document.querySelector('input[name="username"]').focus();
                        
                        // Abrir la configuración MFA en una nueva ventana
                        const mfaUrl = `/mfa-config?username=${encodeURIComponent(data.username)}&password=${encodeURIComponent(data.password)}&qrCodeUrl=${encodeURIComponent(result.qr_code)}&secretKey=${encodeURIComponent(result.secret)}`;
                        window.open(mfaUrl, '_blank', 'noopener,noreferrer');
                    } else {
                        // Mostrar el error si hay uno
                        errorDiv.style.color = 'red';
                        errorDiv.textContent = result.message || 'Registration failed. Please try again.';
                    }
                } else {
                    const error = await response.text();
                    errorDiv.style.color = 'red';
                    errorDiv.textContent = error || 'Registration failed. Please try again.';
                }
            } catch (error) {
                errorDiv.style.color = 'red';
                errorDiv.textContent = 'An error occurred. Please try again.';
                console.error('Error:', error);
            }
        });

        function togglePassword(inputId) {
            const passwordInput = document.getElementById(inputId);
            const toggleIcon = passwordInput.nextElementSibling;

            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.textContent = 'visibility_off';
            } else {
                passwordInput.type = 'password';
                toggleIcon.textContent = 'visibility';
            }
        }

        // Agregar el evento input para validación en tiempo real
        document.querySelector('input[name="username"]').addEventListener('input', function(e) {
            // Remover espacios y convertir a minúsculas en tiempo real
            let value = e.target.value.replace(/\s+/g, '').toLowerCase();
            
            // Si el primer carácter no es una letra, eliminarlo
            if (!/^[a-z]/.test(value) && value.length > 0) {
                value = value.substring(1);
            }
            
            // Permitir letras, números, guiones y guiones bajos
            value = value.replace(/[^a-z0-9_-]/g, '');
            
            e.target.value = value;
        });

        // Asegurar que el input de usuario tenga el foco al cargar la página
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelector('input[name="username"]').focus();
            
            // Manejar la visualización de foco para el checkbox Is ADMIN
            const adminCheckbox = document.querySelector('input[name="isadmin"]');
            const checkmark = adminCheckbox.parentElement.querySelector('.checkmark');
            
            // Verificar si se está usando el tema oscuro
            const isDarkMode = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
            
            // Aplicar estilos directamente si estamos en modo oscuro
            if (isDarkMode) {
                checkmark.style.backgroundColor = '#333333';
                checkmark.style.borderColor = '#555555';
                
                // Añadir listener para cambios en tiempo real
                checkmark.addEventListener('mouseenter', () => {
                    checkmark.style.backgroundColor = '#444444';
                });
                
                checkmark.addEventListener('mouseleave', () => {
                    if (!adminCheckbox.checked) {
                        checkmark.style.backgroundColor = '#333333';
                    }
                });
            }
            
            adminCheckbox.addEventListener('focus', () => {
                // Agregar una clase para mejor visualización cuando está en foco
                checkmark.classList.add('focus-visible');
            });
            
            adminCheckbox.addEventListener('blur', () => {
                // Quitar la clase cuando pierde el foco
                checkmark.classList.remove('focus-visible');
            });
            
            // Actualizar estilo cuando el checkbox cambia
            adminCheckbox.addEventListener('change', () => {
                if (isDarkMode) {
                    if (adminCheckbox.checked) {
                        checkmark.style.backgroundColor = '#45a049';
                        checkmark.style.borderColor = '#45a049';
                    } else {
                        checkmark.style.backgroundColor = '#333333';
                        checkmark.style.borderColor = '#555555';
                    }
                }
            });
        });
    </script>
</body>
</html>